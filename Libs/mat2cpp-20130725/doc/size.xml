<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Matrix Size</title>
<meta name="description" id="description" content="Matrix Size"/>
<meta name="keywords" id="keywords" content=" size "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_size_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.seanet.com/~bradbell/home.htm" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="randn.cpp.xml" target="_top">Prev</a>
</td><td><a href="slice.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>mat2cpp</option>
<option>operation</option>
<option>other</option>
<option>size</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>mat2cpp-&gt;</option>
<option>License</option>
<option>getstarted</option>
<option>operation</option>
<option>mat2cpp.hpp</option>
<option>mat2cpp_ok.m</option>
<option>mat2cpp_ok.cpp</option>
<option>News</option>
<option>library</option>
<option>mztuni</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>operation-&gt;</option>
<option>elementwise</option>
<option>matrixwise</option>
<option>scalar_valued</option>
<option>other</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>other-&gt;</option>
<option>extend</option>
<option>ones</option>
<option>rand</option>
<option>randn</option>
<option>size</option>
<option>slice</option>
<option>zeros</option>
</select>
</td>
<td>size</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Matlab or Octave</option>
<option>---..Example</option>
<option>C++</option>
<option>---..Example</option>
</select>
</td>
</tr></table><br/>




<center><b><big><big>Matrix Size</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<table><tr><td align='left'  valign='top'>

<b>Matlab or Octave</b> </td><td align='left'  valign='top'>
 
<code><font color="blue"><span style='white-space: nowrap'>[</span></font></code><i><span style='white-space: nowrap'>m</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font></code><i><span style='white-space: nowrap'>n</span></i><code><font color="blue"><span style='white-space: nowrap'>]&#xA0;=&#xA0;size(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code>
</td></tr><tr><td align='left'  valign='top'>

<b>C++</b> </td><td align='left'  valign='top'>
 
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>m</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>.size1()</span></font></code>
</td></tr><tr><td align='left'  valign='top'>
 </td><td align='left'  valign='top'>

<code><font color="blue"></font></code><i><span style='white-space: nowrap'>n</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>.size2()</span></font></code>
</td></tr>
</table>
<br/>
<b><big><a name="Matlab or Octave" id="Matlab or Octave">Matlab or Octave</a></big></b>
<br/>
If <i>x</i> is a matrix,
the Matlab or Octave syntax
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[</span></font></code><i><span style='white-space: nowrap'>m</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font></code><i><span style='white-space: nowrap'>n</span></i><code><font color="blue"><span style='white-space: nowrap'>]&#xA0;=&#xA0;size(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>returns the row dimension <i>m</i> and column dimension <i>n</i>
of the matrix <i>x</i>.

<br/>
<br/>
<b><a name="Matlab or Octave.Example" id="Matlab or Octave.Example">Example</a></b>

<code><font color="blue">
<br/>
<pre style='display:inline'>     function [ok] = size_ok()
     ok      = true;
     x       = [ 1 2 3 ; 4 5 6 ];
     % ----------------
     [m, n]  = size(x);
     % ----------------
     ok      = ok &amp; (m == 2);
     ok      = ok &amp; (n == 3);
     return
</pre><br/>
</font></code><br/>
<b><big><a name="C++" id="C++">C++</a></big></b>
<br/>
The corresponding C++ syntax is
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>m</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>.size1()<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>n</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>.size2()<br/>
</span></font></code>where <i>x</i> is a ublas <code><font color="blue">matrix&lt;double&gt;</font></code> and
<i>m</i>, <i>n</i> are <code><font color="blue">size_t</font></code> objects.

<br/>
<br/>
<b><a name="C++.Example" id="C++.Example">Example</a></b>

<code><font color="blue">
<br/>
<pre style='display:inline'>     # include &lt;mat2cpp.hpp&gt;
     bool size_ok(void)
     {	bool   ok  = true;
     	using namespace mat2cpp;
     
     	size_t m(2), n(3);
     	matrix&lt;double&gt; x(m, n);
     	// --------------------
     	ok &amp;= (x.size1() == m);
     	ok &amp;= (x.size2() == n);
     	// --------------------
     	return ok;
     }
</pre><br/>
</font></code>
<hr/>Input File: omh/size.omh

</body>
</html>
