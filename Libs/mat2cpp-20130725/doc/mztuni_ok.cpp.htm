<html><head>
<title>mztuni: Example and Test</title>
<meta name="description" id="description" content="mztuni: Example and Test">
<meta name="keywords" id="keywords" content=" ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_mztuni_ok.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.seanet.com/~bradbell/home.htm" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="mztuni.htm" target="_top">Prev</a>
</td><td><a href="mztuni.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>mat2cpp</option>
<option>mztuni</option>
<option>mztuni_ok.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>mat2cpp-&gt;</option>
<option>License</option>
<option>getstarted</option>
<option>operation</option>
<option>mat2cpp.hpp</option>
<option>mat2cpp_ok.m</option>
<option>mat2cpp_ok.cpp</option>
<option>News</option>
<option>library</option>
<option>mztuni</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>mztuni-&gt;</option>
<option>mztuni_ok.cpp</option>
<option>mztuni.cpp</option>
</select>
</td>
<td>mztuni_ok.cpp</td>
<td>Headings</td>
</tr></table><br>



<center><b><big><big>mztuni: Example and Test</big></big></b></center>
<code><font color="blue"><pre style='display:inline'> 
# include &lt;cstddef&gt;
# include &lt;mztuni.hpp&gt;

bool mztuni_ok(void)
{	bool   ok  = true;
	//
	// seed used to create Table 4 in the article 
	size_t i = 12;
	size_t j = 34;
	size_t k = 56;
	size_t l = 78;
	//
	// seed in format expected by mztuni
	size_t seed = 0;
	seed        = 168 * seed + l - 1;
	seed        = 168 * seed + k - 1;
	seed        = 168 * seed + j - 1;
	seed        = 168 * seed + i + 1; // note + 1 (not - 1)
	//
	// seed the random number generator
	mztuni_seed(seed);
	//
	// skip first 20,000 simulations
	for(size_t ii = 1; ii &lt;= 20000; ii++)
		mztuni();
	//
	// check the next 5 simulations using values in Table 4 of reference
	size_t table_4[] = {
	 6,  3, 11,  3,  0,  4,  0,
	13,  8, 15, 11, 11, 14,  0,
	 6, 15,  0,  2,  3, 11,  0,
	 5, 14,  2, 14,  4,  8,  0,
	 7, 15,  7, 10, 12,  2,  0
	};
	for(size_t ii = 0; ii &lt; 5; ii++)
	{	double x      = mztuni(0);
		size_t factor = 1;
		for(size_t m = 0; m &lt; 7; m++)
		{	factor *= 16;
			size_t value = static_cast&lt;size_t&gt;( x * factor ) % 16;
			size_t check = table_4[ii * 7 + m];
			ok  &amp;= value == check;
		}
	}
	// check seed value
	ok &amp;= mztuni_seed(0) == seed;
	//
	return ok;
}
</pre>

</font></code>


<hr>Input File: cpp/mztuni_ok.cpp

</body>
</html>
