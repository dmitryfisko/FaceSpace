/*
$begin rand$$
$index rand, matrix$$
$index matrix, rand$$
$spell
	mztuni
	ublas
	std
	srand
	Matlab
$$

$section Uniform Random Matrix$$

$head Syntax$$
$table
$bold Matlab or Octave$$ $cnext 
$syntax%%x% = rand(%m%, %n%)%$$
$rnext
$bold C++$$ $cnext 
$syntax%%x% = rand(%m%, %n%)%$$
$tend

$head Matlab or Octave$$
If $italic m$$ and $italic n$$ are integer scalars,
the Matlab or Octave syntax
$syntax%
	%x% = rand(%m%, %n%)
%$$
sets $italic x$$ to an $latex m \times n$$ matrix each entry
drawn from an independent uniform distribution on the interval 
$latex [0,1]$$.  

$subhead Example$$
$code
$verbatim%mat/rand_ok.m%5%$$
$$

$head C++$$
The following is a C++ implementation of the 
Matlab or Octave $code rand$$ function with the syntax:
$syntax%
	%x% = rand(%m%, %n%)
%$$
where $italic m$$ and $italic n$$ are $code size_t$$ values
and $italic x$$ is an $latex m \times n$$ 
ublas $code matrix<double>$$ object.

$subhead std::rand$$
If you want to use $code std::rand$$ to generate the random values,
you must first call the standard library function
$syntax%
	std::srand(%seed%)
%$$
where $italic seed$$ is an $code unsigned int$$
to initialize the random number generator.

$subhead mztuni$$
If there is a previous call of the form
$cref/mztuni(seed)/mztuni/seed/$$ with $icode%seed% > 1%$$,
the $cref mztuni$$ random number generator will be used
(instead of $code std::rand$$).

$subhead Example$$
$code
$verbatim%cpp/rand_ok.cpp%5%$$
$$

$children%
	lib/rand.cpp
%$$

$subhead Source$$
The file $xref/rand.cpp/$$ contains the 
C++ source code for this operation.

$end
*/
